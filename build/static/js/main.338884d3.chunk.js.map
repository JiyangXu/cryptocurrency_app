{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","components/LineChart.jsx","services/cryptoApi.js","components/CryptoDetails.jsx","components/Cryptocurrencies.jsx","components/Exchanges.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","data","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","level","change","options","scales","yAxes","ticks","beginAtZero","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoDHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoDHistoryQuery","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","isFetching","cryptoDetails","coin","console","log","stats","title","value","millify","DollarCircleOutlined","rank","NumberOutlined","volume","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","name","slug","defaultValue","placeholder","onChange","map","date","HTMLReactParser","description","links","link","type","href","target","rel","Cryptocurrencies","simplified","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","toLowerCase","includes","e","gutter","currency","xs","sm","lg","id","extra","iconUrl","hoverable","Exchanges","Homepage","globalStats","span","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","alt","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","from","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDom","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.338884d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React,{useState, useEffect} from 'react';\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from \"@ant-design/icons\";\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n    const [activeMenu, setActiveMenu] = useState(true);\n    const [screenSize, setScreenSize] = useState(null);\n\n    useEffect(()=>{\n        const handleResize = () =>setScreenSize(window.innerWidth);\n\n        window.addEventListener('resize', handleResize);\n\n        handleResize();\n\n        return ()=> window.removeEventListener('resize', handleResize);\n    },[])\n\n    useEffect(()=>{\n        if(screenSize<768){\n            setActiveMenu(false);\n        }else{\n            setActiveMenu(true);\n        }\n    },[screenSize])\n\n\n    return (\n        <div className=\"nav-container\">\n            <div className=\"logo-container\">\n                <Avatar src={icon} size=\"large\" />\n                <Typography.Title>\n                    <Link to=\"/\"> Crytoverse</Link>\n                </Typography.Title>\n                <Button className='menu-control-container' onClick={()=>setActiveMenu(!activeMenu)}>\n                    <MenuOutlined/>\n                </Button>\n            </div>\n            {activeMenu && <Menu theme=\"dark\">\n                <Menu.Item icon={<HomeOutlined />}>\n                    <Link to=\"/\">Home</Link>\n                </Menu.Item>\n                <Menu.Item icon={<FundOutlined />}>\n                    <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n                </Menu.Item>\n                <Menu.Item icon={<MoneyCollectOutlined />}>\n                    <Link to=\"/exchanges\">Exchanges</Link>\n                </Menu.Item>\n                <Menu.Item icon={<BulbOutlined />}>\n                    <Link to=\"/news\">News</Link>\n                </Menu.Item>\n            </Menu>}\n            \n        </div >\n    )\n}\n\nexport default Navbar;\n","import React from 'react'\nimport { Line } from 'react-chartjs-2'\nimport { Col, Row, Typography } from 'antd'\n\nconst { Title } = Typography;\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n    const coinPrice = []\n    const coinTimestamp = []\n\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n        coinPrice.push(coinHistory?.data?.history[i].price);\n    }\n\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n        coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n      }\n\n    const data = {\n        labels: coinTimestamp,\n        datasets: [\n            {\n                label: 'Price in USD',\n                data: coinPrice,\n                fill: false,\n                backgroundColor: '#0071bd',\n                borderColor: '#0071bd'\n            }\n        ]\n    }\n\n    const options = {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n              },\n            },\n          ],\n        },\n      };\n    return (\n        <>\n           <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n        </>\n    )\n}\n\nexport default LineChart\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\n\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': 'b58111cd7bmsh6bb41433bc57590p1acebdjsn82b65d2dc1a6'\n}\n\n//     url: 'https://coinranking1.p.rapidapi.com/exchanges',\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\n\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: (count) => createRequest(`/coins?limit=${count}`)\n        }),\n        getCryptoDetails: builder.query({\n            query: (coinId) => createRequest(`/coin/${coinId}`),\n        }),\n        getCryptoDHistory: builder.query({\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\n        })\n    })\n})\n\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetCryptoDHistoryQuery\n} = cryptoApi;\n\n","import React, { useState } from 'react'\nimport HTMLReactParser from 'html-react-parser'\nimport { useParams } from 'react-router-dom'\nimport millify from 'millify'\nimport { Col, Row, Typography, Select } from 'antd'\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport LineChart from './LineChart'\n\nimport { useGetCryptoDetailsQuery, useGetCryptoDHistoryQuery } from '../services/cryptoApi'\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n    const { coinId } = useParams();\n    const [timePeriod, setTimePeriod] = useState('7d');\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n    const { data: coinHistory } = useGetCryptoDHistoryQuery({ coinId, timePeriod });\n\n    const cryptoDetails = data?.data?.coin;\n    console.log(data)\n\n    if (isFetching) return \"Loading...\"\n\n\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n    const stats = [\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n    ];\n\n    const genericStats = [\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n    ];\n\n\n    return (\n        <>\n            <Col className='coin-detail-container'>\n                <Col className='coin-heading-container'>\n                    <Title level={2} className='coin-name'>{cryptoDetails.name} ({cryptoDetails.slug})</Title>\n                    <p>\n                        {cryptoDetails.name} live price in US dollars. View value statisitics, makrket cap and supply.\n                    </p>\n                </Col>\n                <Select\n                    defaultValue='7d'\n                    className='select-timeperiod'\n                    placeholder='Select Time Period'\n                    onChange={(value) => setTimePeriod(value)}\n                >\n                    {time.map((date) => <Option key={date}>{date}</Option>)}\n                </Select>\n                <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n                <Col className='stats-container'>\n                    <Col className='coin-value-statistics'>\n                        <Col className='coin-value-statistics-heading'>\n                            <Title level={3} className='coin-details-heading'>\n                                {cryptoDetails.name} Value Statistics\n                            </Title>\n                            <p>\n                                An overview showing the stats or {cryptoDetails.name}\n                            </p>\n                        </Col>\n                        {stats.map(({ icon, title, value }) => (\n                            <Col className='coin-stats'>\n                                <Col className='coin-stats-name'>\n                                    <Text>{icon}</Text>\n                                    <Text>{title}</Text>\n\n                                </Col>\n                                <Text className='stats'>\n                                    {value}\n                                </Text>\n                            </Col>\n                        ))}\n                    </Col>\n\n                    <Col className='other-stats-info'>\n                        <Col className='coin-value-statistics-heading'>\n                            <Title level={3} className='coin-details-heading'>\n                                Other Statistics\n                            </Title>\n                            <p>\n                                An overview showing the stats of all cryptocurrencies and\n                            </p>\n                        </Col>\n                        {genericStats.map(({ icon, title, value }) => (\n                            <Col className='coin-stats'>\n                                <Col className='coin-stats-name'>\n                                    <Text>{icon}</Text>\n                                    <Text>{title}</Text>\n\n                                </Col>\n                                <Text className='stats'>\n                                    {value}\n                                </Text>\n                            </Col>\n                        ))}\n                    </Col>\n                </Col>\n                <Col className='coin-desc-link'>\n                    <Row className='coin-desc'>\n                        <Title level={3} className='coin-details-heading'>Description\n                            What is {cryptoDetails.name}\n                            {HTMLReactParser(cryptoDetails.description)}\n                        </Title>\n                    </Row>\n                    <Col className='coin-links'>\n                        <Title className=\"coin-details-heading\" level={3}>\n                            {cryptoDetails.name} Links\n                        </Title>\n                        {cryptoDetails.links.map((link) => (\n                            <Row className='coin-link' key={link.name}>\n                                <Title level={5} className='link-name'>\n                                    {link.type}\n                                </Title>\n                                <a href={link.url} target=\"_bank\" rel='noreferrer'>\n                                    {link.name}\n                                </a>\n                            </Row>\n                        ))}\n                    </Col>\n                </Col>\n            </Col>\n        </>\n    )\n}\n\nexport default CryptoDetails\n","import React, { useState, useEffect } from 'react'\nimport millify from 'millify'\nimport { Link } from 'react-router-dom'\nimport { Card, Col, Row, Input } from 'antd'\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'\n\nconst Cryptocurrencies = ({ simplified }) => {\n    const count = simplified ? 10 : 100\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n    const [cryptos, setCryptos] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\n        setCryptos(filteredData)\n    }, [cryptosList, searchTerm])\n    if (isFetching) return \"Loading...\"\n    return (\n        <>\n            {!simplified && (<div className='search-crypto'>\n                <Input placeholder='Search Cryptocurrency' onChange={(e) => {\n                    setSearchTerm(e.target.value)\n                }}>\n                </Input>\n            </div>)}\n\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\n                {cryptos?.map((currency) => (\n                    <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.id}>\n                        <Link to={`/crypto/${currency.id}`}>\n                            <Card\n                                title={`${currency.rank}.${currency.name}`}\n                                extra={<img className='crypto-image' src={currency.iconUrl} />}\n                                hoverable\n                            >\n                                <p>Price:{millify(currency.price)}</p>\n                                <p>Market Cap:{millify(currency.marketCap)}</p>\n                                <p>Daily Change:{millify(currency.change)}</p>\n                            </Card>\n                        </Link>\n                    </Col>\n                ))}\n            </Row>\n        </>\n    )\n}\n\nexport default Cryptocurrencies\n","import React from 'react'\n\nconst Exchanges = () => {\n    return (\n        <div>\n            Exchanges\n        </div>\n    )\n}\n\nexport default Exchanges\n","import React from 'react'\n\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { News, Cryptocurrencies } from '../components'\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n    const { data, isFetching } = useGetCryptosQuery(10);\n    const globalStats = data?.data?.stats;\n    if (isFetching) return \"Loading...\"\n\n    return (\n        <>\n            <Title level={2} className='heading'>\n                Global Crypto Stats\n            </Title>\n            <Row>\n                <Col span={12}><Statistic title='Total Cryptocurrencies' value={globalStats.total} /></Col>\n                <Col span={12}><Statistic title='Total Exchanges' value={millify(globalStats.totalExchanges)} /></Col>\n                <Col span={12}><Statistic title='Total Market Cap' value={millify(globalStats.totalMarketCap)} /></Col>\n                <Col span={12}><Statistic title='Total 24h Volume' value={millify(globalStats.total24hVolume)} /></Col>\n                <Col span={12}><Statistic title='Total Markets' value={millify(globalStats.totalMarkets)} /></Col>\n            </Row>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\"> Top 10 Cryptocurrencies in the world</Title>\n                <Title level={3} className=\"show-more\"> <Link to='/cryptocurrencies'>Show More</Link></Title>\n            </div>\n            <Cryptocurrencies simplified />\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\"> Latest Crypto News</Title>\n                <Title level={3} className=\"show-more\"> <Link to='/news'>Show More</Link></Title>\n            </div>\n            <News simplified />\n\n        </>\n    )\n}\n\nexport default Homepage\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\n\nconst cryptoNewsHeaders = {\n    'x-bingapis-sdk': 'true',\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n    'x-rapidapi-key': 'b58111cd7bmsh6bb41433bc57590p1acebdjsn82b65d2dc1a6'\n}\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders })\n\nexport const cryptoNewsApi = createApi({\n    reducerPath: 'cryptoNewsApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptoNews: builder.query({\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\n        })\n    })\n})\n\nexport const {\n    useGetCryptoNewsQuery,\n} = cryptoNewsApi;","import React, { useState } from 'react'\nimport { Select, Card, Col, Typography, Row, Avatar } from 'antd'\n\nimport moment from 'moment'\n\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi'\nimport { useGetCryptosQuery } from '../services/cryptoApi'\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\n\nconst News = ({ simplified }) => {\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\n    const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n    const { data } = useGetCryptosQuery(100);\n\n    if (!cryptoNews?.value) return \"Loading...\"\n\n    return (\n        <Row gutter={[24, 24]}>\n            {!simplified && (\n                <Col span={24}>\n                    <Select\n                        showSearch\n                        className=\"select-news\"\n                        placeholder='Select a Crypto'\n                        optionFilterProp='children'\n                        onChange={(value) => setNewsCategory(value)}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value='Cryptocurrency'>\n                            Cryptocurrency\n                        </Option>\n                        {data?.data?.coins.map((coin) => (\n                            <Option value={coin.name}>\n                                {coin.name}\n                            </Option>\n                        ))}\n                    </Select>\n                </Col>\n            )}\n            {cryptoNews.value.map((news) => (\n                <Col xs={24} sm={12} lg={8} key={1}>\n                    <Card hoverable className='news-card'>\n                        <a href={news.url} target='_blank' rel='noreferrer'>\n                            <div className='news-image-container'>\n                                <Title className='news-title' level={4}>\n                                    {news.name}\n                                </Title>\n                                <img alt='news' src={news?.image?.thumbnail?.contentUrl || demoImage} />\n                            </div>\n                            <p>\n                                {news.description > 100\n                                    ? `${news.description.substring(0, 100)}...`\n                                    : news.description}\n                            </p>\n                            <div className=\"provider-container\">\n                                <div>\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt='news' />\n                                    <Text className='provider-name'>{news.provider[0]?.name}</Text>\n                                </div>\n                                <Text>{moment(news.datePublished).startOf('ss').from()}</Text>\n                            </div>\n                        </a>\n                    </Card>\n                </Col>\n            ))}\n        </Row>\n    )\n}\n\nexport default News\n","import React from 'react'\n\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies, News, CryptoDetails } from './components';\nimport './App.css'\n\nconst App = () => {\n    return (\n        <div className='app'>\n            <div className=\"navbar\">\n                <Navbar />\n            </div>\n            <div className=\"main\">\n                <Layout>\n                    <div className=\"routes\">\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Homepage />\n                            </Route>\n                            <Route exact path=\"/exchanges\">\n                                <Exchanges />\n                            </Route>\n                            <Route exact path=\"/cryptocurrencies\">\n                                <Cryptocurrencies />\n                            </Route>\n                            <Route exact path=\"/crypto/:coinId\">\n                                <CryptoDetails />\n                            </Route>\n                            <Route exact path=\"/news\">\n                                <News />\n                            </Route>\n                        </Switch>\n                    </div>\n                </Layout>\n\n                <div className=\"footer\"  >\n                    <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\n                        Crtptoverse<br />\n                        All rights reserverd\n                    </Typography.Title>\n                    <Space>\n                        <Link to=\"/\">Home</Link>\n                        <Link to=\"/exchanges\">Exchanges</Link>\n                        <Link to=\"/news\">News</Link>\n                    </Space>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\n\nexport default configureStore({\n    reducer: {\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n\n    }\n})","import React from 'react';\n\nimport ReactDom from \"react-dom\";\nimport App from \"./App.js\";\nimport 'antd/dist/antd.css';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport store from './app/store'\n\nReactDom.render(\n    <Router>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>, document.getElementById(\"root\"))"],"sourceRoot":""}